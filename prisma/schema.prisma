// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma
model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  password String
  vote     Vote?   @relation("UserVote") // ผู้ใช้มีได้เพียง 1 โหวตเท่านั้น
  quotes   Quote[] @relation("UserQuotes") // ผู้ใช้สามารถสร้างได้หลายคำคม
}

// คำคม ใครสร้าง , คะแนนโหวต
model Quote {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  createdBy   User     @relation("UserQuotes", fields: [createdById], references: [id])
  createdById String   @db.ObjectId
  votes       Vote[]   @relation("QuoteVotes") // คำคมอาจได้รับหลายโหวตจากผู้ใช้ต่าง ๆ
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// โหวต , คำคม id ไหนได้รับการโหวต , user id ไหนโหวต
model Vote {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quote     Quote    @relation("QuoteVotes", fields: [quoteId], references: [id])
  quoteId   String   @db.ObjectId
  user      User     @relation("UserVote", fields: [userId], references: [id])
  userId    String   @unique @db.ObjectId // ผู้ใช้สามารถมีโหวตได้เพียงหนึ่งครั้งเท่านั้น
  createdAt DateTime @default(now())
}

// user คนสร้าง => createby เชื่อม user สร้าง Quote เมือได้ id จาก user ให้ เอา id ไปใส่ที่ createdById
